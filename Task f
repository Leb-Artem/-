global _start

code_zero equ 48
N equ 8

section .text
_start:
mov rax, 0
mov rbx, 1
mov rdx, 0

call asm_rot
call asm_exit

asm_rot:
mov rbp, N

L_e:
lea rdx, [rbx + 2*rax]
mov rax, rbx
mov rbx, rdx
xor rdx, rdx

Loop L_e
mov rdx, rbx
ret

asm_exit:
mov rax, 60
xor rdi, rdi
syscall
ret
